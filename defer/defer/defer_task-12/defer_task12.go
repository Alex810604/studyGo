//В решении напиши комментарии и объяснение почему так работает
//===============================================================================
// Что выведет программа и почему?

package main

import "fmt"

func main() {
	x := 10
	y := 20

	defer func(val int) { //defer с аргументами (val int) вычисляется в момент вызова defer.
		//Изменения переменных не влияют на отложенный вызов
		fmt.Println("x:", val) //(3) -> 10
	}(x) //// Передаётся текущее значение x на момент объявления (10)

	defer func() { //defer без аргументов. Захватывает переменные по ссылке с актуальными значениями на момент выполнения.
		fmt.Println("y:", y) //(2) -> 200
	}()

	x = 100 //присвоение новых значений
	y = 200 //присвоение новых значений

	fmt.Println("Конец main") // (1) Конец main
}
